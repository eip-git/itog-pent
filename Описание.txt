  
  Проект - одна job, состоящая из последовательно соединенных между собой
  трансформаций. Каждая трансформация загружает одну таблицу.
  Сначала грузятся справочники, затем - таблица фактов. 
    
  Данные об аэропортах грузятся из таблицы bookings.airports.
  При загрузке  проверяется:
  - код аэропорта не проверяется, т.к. в исходной таблице это ключевое поле,
  - название не должно быть равно пустой строке,
  - город не должен быть равен пустой строке.
  
  Данные о самолетах грузятся из таблицы bookings.aircrafts.
  При загрузке  проверяется:
  - код аэропорта не проверяется, т.к. в исходной таблице это ключевое поле
  - модель не должна быть равна пустой строке,
  - макс.скорость должна быть больше нуля.
  
  Данные о пассажирах грузятся из таблицы bookings.tikets.
  При загрузке  проверяется:
  - идентификатор пассажира не должен быть равен пустой строке или '0',
  - имя пассажира не должно быть равно пустой строке.
  На NULL проверки нет, так как проверяемые поля в исходной таблице уже NOT NULL.
  
 Данные о тарифах грузятся из таблицы bookings.tiket_flights.
  При загрузке проверяется:
  - название тарифа не равно пустой строке (в исходной таблице уже NOT NULL.)
 
  Перелеты для таблицы FACT_FLIGHTS загружаются из запроса 
  select fv.flight_id, flight_no , departure_airport, arrival_airport, aircraft_code,
       actual_departure::date as dt       , actual_arrival, 
       EXTRACT(epoch from actual_departure) - EXTRACT(EPOCH from scheduled_departure) departure_delay,
       EXTRACT(epoch from actual_arrival) - EXTRACT(EPOCH from scheduled_arrival) arrival_delay,
        b.book_ref , t.passenger_id , t.passenger_name , tf.amount , tf.fare_conditions tariff
   from bookings.flights_v fv 
        join bookings.ticket_flights tf on tf.flight_id = fv.flight_id 
        join bookings.tickets t on t.ticket_no = tf.ticket_no 
        join bookings.bookings b on b.book_ref = t.book_ref 
  where status = 'Arrived'   
   
  Проверяются те поля, которые будут ссылаться на таблицы измерений:
  - реальная дата вылета и дата прилета не должны быть равны NULL или 0,
  - коды аэропортов вылета и прилета не должны быть равны пустой строке,
  - идентификатор пассажира не должен быть равен пустой строке или 0,
  - название тарифа не должно быть равно пустой строке.

  После выполнения проверок производится замена исходных значений полей tariff, actual_departure и actual_arrival на
  идентификаторы этих значений в таблицах dim:
  - tariff является названием тарифа, с помощью Combination lookup
     ищется и подставляется на его место идентификатор этого тарифа,
  - идентификатор для дат ищется в таблице dim_calendar по полю ansi_date.
 
  Поля пассажир, самолет и аэропорт уже являются идентификаторами
  
  Все записи, не прошедшие проверку, грузятся в таблицы с префиксом "bad".
  Все bad-таблицы содержат те же поля, что и итоговые таблицы.
  
  Загрузка полетов работает долго. Кэш увеличен, Database lookup заменила на Combination lookup
  , но все равно работало долго. Поэтому в файле создания таблиц (create_tables.sql) 
  создание внешних ключей для таблицы FACT_FLIGHTS закомментировано для ускорения
  процесса загрузки. На ERV-диаграмме все ключи уже подключены. 
  
  
  
  
  